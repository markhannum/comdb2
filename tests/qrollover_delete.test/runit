#!/usr/bin/env bash
bash -n "$0" | exit 1

#export debug=1
[[ $debug == "1" ]] && set -x

. ${TESTSROOTDIR}/tools/write_prompt.sh
. ${TESTSROOTDIR}/tools/ddl.sh
. ${TESTSROOTDIR}/tools/cluster_utils.sh

export stopfile=./stopfile.txt

function failexit
{
    [[ $debug == "1" ]] && set -x
    touch $stopfile
    echo "Failed: $1"
    exit -1
}

function stop_cluster
{
    [[ $debug == "1" ]] && set -x
    for node in $CLUSTER ; do
        $CDB2SQL_EXE $CDB2_OPTIONS --tabs $DBNAME --host $node "exec procedure sys.cmd.send(\"exit\")"
    done
    sleep 5
}

function verify_up
{
    [[ $debug == "1" ]] && set -x
    typeset func="verify_up"
    write_prompt $func "Running $func"
    typeset node=$1
    typeset count=0
    typeset r=1
    while [[ "$r" -ne "0" && "$count" -lt 2000 ]]; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME --host $node "select 1" >/dev/null 2>&1
        r=$?
        [[ $r != 0 ]] && sleep 1
        let count=count+1
    done
    [[ $r != 0 ]] && failexit "node $node did not recover in time"
}

function setup_test
{
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "drop table t" 
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "drop lua consumer test" 
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "create table t(a int, b blob)" 
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "create procedure test version '1' { $(cat test.lua) }"
    $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "create lua consumer test on (table t for insert)"
}

# funny: consumer is bottle-neck .. 

function consumer
{
    typeset func="consumer"
    typeset lastpr=$(date +%s)
    typeset count=0

    write_prompt $func "Consumer thread starting"

    while [[ ! -f $stopfile ]]; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "exec procedure test()" >/dev/null 2>&1 
        let count=count+1
        if [[ "$lastpr" != "$(date +%s)" ]]; then
            write_prompt $func "consumed $count times"
            lastpr="$(date +%s)"
        fi
    done
}

function run_test
{
    typeset func="run_test"
    typeset maxtime=500
    typeset now=$(date +%s)
    typeset endtime=$(( now + maxtime ))
    typeset iteration=0

    consumer &

    while [[ ! -f $stopfile && "$(date +%s)" -lt "$endtime" ]]; do
        let i=0
        write_prompt $func "Iteration $iteration inserting"
        while [[ "$i" -lt 1000 ]]; do
            $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "insert into t values(1, randomblob(10000))" > /dev/null 2>&1
            let i=i+1
        done
        write_prompt $func "Iteration $iteration deleting"
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "delete from t" > /dev/null 2>&1
        let iteration=iteration+1
    done

    write_prompt $func "Touching stop-file"
    touch $stopfile
    write_prompt $func "Inserting final"
    let i=0
    while [[ "$i" -lt 1000 ]]; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME default "insert into t values(1, randomblob(10000))" > /dev/null 2>&1
        let i=i+1
    done
    write_prompt $func "Waiting for consume thread"
    wait
}


rm -f $stopfile > /dev/null 2>&1
setup_test
run_test

echo "Success"
