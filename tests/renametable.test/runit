#!/usr/bin/env bash

. ${TESTSROOTDIR}/tools/cluster_utils.sh

sleeptime=2
ckiters=10
dbnm=$1
#cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - > output.txt 2>&1
cat <<EOF | cdb2sql ${CDB2_OPTIONS} $dbnm default - > output.txt 2>&1
insert into t values (40)
insert into t values (20)
insert into t values (30)
insert into t values (10)
insert into t values (50)
select * from t order by id
alter table t rename to t2
\$\$
select * from t2 order by id
select * from t order by id
insert into t2 values (80)
insert into t2 values (90)
select * from t2 order by id
select * from t order by id
alter table t2 rename to t
\$\$
select * from t2 order by id
select * from t order by id
insert into t values (100)
insert into t values (110)
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
alter table t rename to t2
\$\$
alter table t2 rename to t
\$\$
select * from t2 order by id
select * from t order by id
insert into t values (100)
insert into t values (110)
update t set id=id+1
select * from t order by id
EOF

df=`diff output.txt reqoutput.txt`
if [ $? -ne 0 ] ; then
     echo "  ^^^^^^^^^^^^"
     echo "The above testcase (${testcase}) has failed!!!"
     echo " "
     echo "Use 'diff <expected-output> <my-output>' to see why:"
     echo "> diff ${PWD}/output.txt ${PWD}/reqoutput.txt"
     echo " "
     diff output.txt reqoutput.txt
     echo " "
     exit 1
fi 

# Enable logging for this part
set -x

# Change the name
cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table t rename to identifiers_staged" 
if [[ $? -ne 0 ]]; then
    echo "Can't find rename to new table"
    exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbnm default "select count(*) from identifiers_staged"
if [[ $? -ne 0 ]]; then
    echo "Can't find records in new table"
    exit 1
fi

cdb2sql ${CDB2_OPTIONS} $dbnm default "alter table identifiers_staged rename to identifiers"
if [[ $? -ne 0 ]]; then
    echo "Can't find rename to new table"
    exit 1
fi

# Bounce
bounce_database
sleep $sleeptime
export out=""

# Make sure cluster is alive
if [[ -z "$CLUSTER" ]]; then
    export cnt=0
    while [[ "$out" != "1" ]]; do
        out=$($CDB2SQL_EXE ${CDB2_OPTIONS} --tabs $DBNAME default 'select 1' 2> /dev/null)
        $CDB2SQL_EXE -v ${CDB2_OPTIONS} --tabs $DBNAME default 'select 1' 
        sleep $sleeptime
        let cnt=cnt+1
        if [[ $cnt -gt $ckiters ]]; then
            echo "Database failed to restart"
            exit 1
        fi
    done
else
    for node in ${CLUSTER}; do
        export cnt=0
        while [[ "$out" != "1" ]]; do
            out=$($CDB2SQL_EXE ${CDB2_OPTIONS} --tabs --host $node $DBNAME 'select 1' 2> /dev/null)
            $CDB2SQL_EXE -v ${CDB2_OPTIONS} --tabs --host $node $DBNAME 'select 1' 
            sleep $sleeptime
            let cnt=cnt+1
            if [[ $cnt -gt $ckiters ]]; then
                echo "Database failed to restart on $node"
                exit 1
            fi
        done
    done
fi

echo "Success"
