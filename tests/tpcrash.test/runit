#!/usr/bin/env bash
bash -n "$0" | exit 1

export debug=1
[[ $debug == "1" ]] && set -x

. ${TESTSROOTDIR}/tools/write_prompt.sh
. ${TESTSROOTDIR}/tools/ddl.sh
. ${TESTSROOTDIR}/tools/cluster_utils.sh

export stopfile=./stopfile.txt
export maxtable=20

function failexit
{
    [[ $debug == "1" ]] && set -x
    touch $stopfile
    echo "Failed: $1"
    exit -1
}

function create_tables
{
    typeset count=${1:-20}
    typeset j=0
    while [[ $j -lt $count ]]; do
        t="t${j}"
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME "create table $t(a int)"
        let j=j+1
    done
}

function create_partitions
{
    typeset count=${1:-20}
    typeset j=0
    while [[ $j -lt $count ]]; do
        t="t${j}"
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME "create time partition on $t as ${t}part period 'weekly' retention 2 start '2024-01-01T000000.000'"
        let j=j+1
    done
}

function query_tables
{
    while [[ ! -f $stopfile ]]; do
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME "select * from comdb2_tables where tablename not in (select name from comdb2_timepartitions)" >/dev/null 2>&1
    done
}

function create_procedures
{
    typeset count=${1:-20}
    typeset j=0
    while [[ $j -lt $count ]]; do
        p="p${j}"
        $CDB2SQL_EXE $CDB2_OPTIONS $DBNAME - <<EOF
create procedure $p version 'test' {
local function main()
    db:column_type("string", 1);
    db:column_type("string", 2);
    db:emit("123", "456");
    return 0
end}\$\$
EOF
        let j=j+1
    done
}

function run_test
{
    query_tables &
    create_tables $maxtable
    create_partitions $maxtable
    create_procedures $maxtable
    sleep 5
    touch $stopfile
    wait
}

run_test
echo "Success"
